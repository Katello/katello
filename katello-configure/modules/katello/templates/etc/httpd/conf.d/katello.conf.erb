#
# WARNING: THIS CONFIGURATION WAS GENERATED BY KATELLO-CONFIGURE TOOL,
# CHANGES WILL LIKELY BE OVERWRITTEN.
#

NameVirtualHost *:443
<VirtualHost *:443>

  ErrorLog /etc/httpd/logs/ssl_kt_error_log
  TransferLog /etc/httpd/logs/ssl_kt_access_log
  LogLevel info

  ProxyRequests Off
  SSLEngine On
  SSLCertificateFile <%= scope.lookupvar("katello::params::ssl_certificate_file") %>
  SSLCertificateKeyFile <%= scope.lookupvar("katello::params::ssl_certificate_key_file") %>
  SSLCaCertificateFile <%= scope.lookupvar("katello::params::ssl_certificate_ca_file") %>
  ProxyPreserveHost Off
  RequestHeader set X_FORWARDED_PROTO 'https'

  # Performance related configurations
  AddOutputFilterByType DEFLATE text/html text/css application/x-javascript application/javascript
  KeepAlive On
  Timeout 5400

  Alias /<%= scope.lookupvar("katello::params::deployment_url") %>/assets "/usr/share/katello/public/assets"
  Alias /<%= scope.lookupvar("katello::params::deployment_url") %>/images "/usr/share/katello/public/images"
  Alias /<%= scope.lookupvar("katello::params::deployment_url") %>/fonts "/usr/share/katello/public/fonts"
  Alias /<%= scope.lookupvar("katello::params::deployment_url") %>/javascripts "/usr/share/katello/public/javascripts"

  ExpiresActive On
  RailsAutoDetect off
  RailsBaseURI /<%= scope.lookupvar("katello::params::deployment_url") %>
  <Directory "/var/www/html/<%= scope.lookupvar("katello::params::deployment_url") %>">
    Options -MultiViews
    AllowOverride all
  </Directory>

  RailsBaseURI /<%= scope.lookupvar('foreman::deployment_url') %>
  <Directory "/var/www/html/foreman">
    Options -MultiViews
    AllowOverride all
  </Directory>

  <Directory "/usr/share/katello/public/">
    ExpiresDefault "access plus 1 year"
  </Directory>
  <Location /<%= scope.lookupvar("katello::params::deployment_url") %>/assets>
    PassengerEnabled off
  </Location>
  <Location /<%= scope.lookupvar("katello::params::deployment_url") %>/images>
    PassengerEnabled off
  </Location>
  <Location /<%= scope.lookupvar("katello::params::deployment_url") %>/fonts>
    PassengerEnabled off
  </Location>
  <Location /<%= scope.lookupvar("katello::params::deployment_url") %>/javascripts>
    PassengerEnabled off
  </Location>

  <Location /<%= scope.lookupvar("katello::params::deployment_url") %>>
    RequestHeader set SSL_CLIENT_CERT "%{SSL_CLIENT_CERT}s"
    SSLVerifyClient optional
    SSLRenegBufferSize 16777216 
    SSLVerifyDepth 2
  </Location>

  <Location /<%= scope.lookupvar("katello::params::deployment_url") %>/api>
    # report to CLI and RHSM nicely when Katello is down
    ErrorDocument 500 '{"displayMessage": "Internal error, contact administrator", "errors": ["Internal error, contact administrator"], "status": "500" }'
    ErrorDocument 503 '{"displayMessage": "Service unavailable or restarting, try later", "errors": ["Service unavailable or restarting, try later"], "status": "503" }'
  </Location>

  ProxyPass /subscription https://$RHN_PARENT/katello/api
  ProxyPassReverse /subscription $PROTO://$RHN_PARENT/katello/api
#  <Location /subscription>
#    RewriteEngine On
#    RewriteRule /<%= scope.lookupvar("katello::params::deployment_url") %>(.*)$ https://%{HTTP_HOST}%{REQUEST_URI}
#  </Location>
</VirtualHost>

NameVirtualHost *:80
<VirtualHost *:80>
  RewriteEngine On
  RewriteCond %{HTTPS} off
  RewriteRule /<%= scope.lookupvar("katello::params::deployment_url") %>(.*)$ https://%{HTTP_HOST}%{REQUEST_URI}
</VirtualHost>
