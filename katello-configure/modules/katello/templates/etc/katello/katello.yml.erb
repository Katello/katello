#
# WARNING: THIS CONFIGURATION WAS GENERATED BY KATELLO-CONFIGURE TOOL,
# CHANGES WILL LIKELY BE OVERWRITTEN.
#

# Katello configuration
#
# :vim:sw=2:ts=2:et:
#
# Common configuration
#
# The following configuration values are the same for production, test
# and development environments. Values can be overriden bellow.
#
# host (default=127.0.0.1): The host (i.e. fully qualified domain name) of the
#   server.  This host is used by ActionMailer when generating urls sent in
#   emails from the server.  For example, the host would be the fqdn portion
#   of a URL for resetting a user's password.
#
# port (default= <unset>): Similar to host; however, provides the port
#   component of the URL.
#
# password_reset_expiration (default=120): Specifies the number of
#   minutes that a password reset token will remain valid.
#
common:

  warden:  <%= scope.lookupvar("katello::params::auth_method") %>
  ldap_roles: <%= scope.lookupvar("katello::params::ldap_roles") %>
  use_cp: true
  use_pulp: <%= scope.lookupvar("katello::params::deployment") == 'katello' %>
  use_foreman: <%= scope.lookupvar("katello::params::deployment") == 'katello' %>
  rest_client_timeout: 120

  host: <%= has_variable?("fqdn") ? fqdn : hostname %>
  use_ssl: true
  port:

  password_reset_expiration: 120

  #Allowed log levels: 'debug', 'info', 'warn', 'error', 'fatal'
  #log_level: warn
  #log_level_sql: fatal

#setup how often you want
#your notifications to be checked
#for you to receive the right notifications
#default value = 45 seconds
#
  notification:
    polling_seconds: 120

# Setup your UI search configuration.
# max_history (default=5): specifies the number of search history elements
#   that will be retained for users
# max_favorites (default=5): specifies the number of search favorites that
#   a user may store per search box
  search:
    max_history: 5
    max_favorites: 5

# Setup your candlepin environment here
# url: refers to the url of the candlepin
#     example https://localhost:8443/candlepin
# username: refers to admin login in candlepin
# password: refers to the admin password in candlepin
# oauth_key and oauth_secre :Specify your oauth key and secret
#   used to authenticate between Katello and Candlepin
# ca_cert_file: refers to the candlepin-ca.crt location that is needed
#   to connect to candlepin over https.This is not necessary
#   if the candlepin server is running on the same machine as katello
#   but required if the server is on a different machine.
#   In the different machine case the katello host needs to have a
#   copy of /etc/candlepin/certs/candlepin-ca.crt copied from
#   the candlepin host and the location of the copied file needs to be
#   specified here..
  candlepin:
    url: <%= scope.lookupvar("katello::params::candlepin_url") %>
    oauth_key: <%= scope.lookupvar("katello::params::oauth_key") %>
    oauth_secret: <%= scope.lookupvar("katello::params::oauth_secret") %>

# Setup your pulp environment here
# url: refers to the url of the pulp
#     example https://localhost/pulp/api
# oauth_key and oauth_secre :Specify your oauth key and secret
#   used to authenticate between Katello and Pulp
# ca_cert_file: refers to the apache certificate
#   (typically /etc/pki/tls/certs/localhost.crt) location that is needed
#   to connect to pulp over https.
  pulp:
    url: <%= scope.lookupvar("katello::params::pulp_url") %>
    oauth_key: <%= scope.lookupvar("katello::params::oauth_key") %>
    oauth_secret: <%= scope.lookupvar("katello::params::oauth_secret") %>
    sync_threads: 4
    #sync_KBlimit: 100

# Setup proxy to use when accessing CDN.
# Katello calls CDN to retrieve list of repositories for a product

<%- unless scope.lookupvar("katello::params::proxy_url") == "NONE" -%> 
  cdn_proxy:
    host: <%= scope.lookupvar("katello::params::proxy_url") %>
    <%- unless scope.lookupvar("katello::params::proxy_port") == "NONE" -%>
    port: <%= scope.lookupvar("katello::params::proxy_port") %>
    <%- else -%>
#   port: 3128
    <%- end -%>
    <%- unless scope.lookupvar("katello::params::proxy_user") == "NONE" -%>
    user: <%= scope.lookupvar("katello::params::proxy_user") %>
    <%- else -%>
#   user: username
    <%- end -%>
    <%- unless scope.lookupvar("katello::params::proxy_pass") == "NONE" -%>
    password: <%= scope.lookupvar("katello::params::proxy_pass") %>
    <%- else -%>
#   password: password
    <%- end -%>
<%- else -%>
# Uncomment in case you want this calls to go through your proxy
#  cdn_proxy:
#    host: localhost
#    port: 3128
#    user: username
#    password: password
<%- end -%>

# Setup your foreman environment here
# url: refers to the url of the Foreman (without the final '/')
#     example https://foreman.instance.company.com:443
# oauth_key and oauth_secre :Specify your oauth key and secret
#   used to authenticate between Katello and Foreman
  foreman:
    url: <%= scope.lookupvar("katello::params::foreman_url") %>
    oauth_key: <%= scope.lookupvar("katello::params::oauth_key") %>
    oauth_secret: <%= scope.lookupvar("katello::params::oauth_secret") %>

  cloud_forms:
    oauth_key: <%= scope.lookupvar("katello::params::oauth_key") %>
    oauth_secret: <%= scope.lookupvar("katello::params::oauth_secret") %>

#
# Production environment configuration
#
# The following configuration values override ones from the common section
#
<%# bug #7991 in puppet 2.6 - need to explicitly load custom functions %>
<% Puppet::Parser::Functions::function('katello_passencrypt') %>
  database:
   adapter: postgresql
   username: <%= scope.lookupvar("katello::params::db_user") %>
   password: <%= scope.function_katello_passencrypt([scope.lookupvar("katello::params::db_pass")]) %>
   database: <%= scope.lookupvar("katello::params::db_name") %>
   host: localhost
   encoding: UTF8

#
# Development environment configuration
#
# The following configuration values override ones from the common section
#
development:
  #debug_rest: true
  #debug_pulp_proxy: true
  #debug_cp_proxy: true

#
# Test environment configuration
#
# The following configuration values override ones from the common section
#
test:

# EOF
