#!/bin/bash
#
# Init script for katello
#
# chkconfig: - 86 14
# description: Init script for katello


# Source function library.
. /etc/rc.d/init.d/functions

if [ -f /etc/sysconfig/katello ]; then
    . /etc/sysconfig/katello
fi

prog=katello
RETVAL=0
KATELLO_PORT=${KATELLO_PORT:-3000}
KATELLO_USER=${KATELLO_USER:-katello}
KATELLO_HOME=${KATELLO_HOME:-/usr/share/katello}
KATELLO_DATA_DIR=${KATELLO_DATA_DIR:-/var/lib/katello}
KATELLO_ENV=${KATELLO_ENV:-production}
KATELLO_PID=${KATELLO_PID:-${KATELLO_HOME}/tmp/pids/server.pid}
export KATELLO_LOGGING=${KATELLO_LOGGING:-info}

check_privilege() {
    runuser -s /bin/sh ${KATELLO_USER} -c "echo x > /dev/null" 2> /dev/null || RETVAL=4
    if [ $RETVAL = 4 ]; then
        echo "User had insufficient privilege";
        exit $RETVAL
    fi
}

status() {
    #check if pid file exists
    if [ -f ${KATELLO_PID} ]; then
        pid=`cat ${KATELLO_PID}`
        #check if proces with pid from the file is running
        if `ps -p $pid > /dev/null`; then
            echo "$prog is running."
            RETVAL=0
        else
            echo "$prog is not running."
            RETVAL=1
        fi
    else
        echo "$prog is not running."
        RETVAL=3
    fi

    return $RETVAL
}

status_q() {
    status &> /dev/null
    return $?
}

start() {
    check_privilege

    [ ! -f $KATELLO_DATA_DIR/initdb_done ] && echo "Please run initdb first" && echo_failure && return 1

    echo -n $"Starting $prog: "
    if status_q; then
        echo -n $"$prog is already running. "
        RETVAL=0
        echo_success
    else
        cd ${KATELLO_HOME} #rails expects you to run from the root of the app
        # delete Gemfile.lock (it will be regenerated)
        rm -f $KATELLO_DATA_DIR/Gemfile.lock
        #workaround for the bug 726030 - Webrick wont start with the -d (daemon) option
        #daemon --user ${KATELLO_USER} bundle exec /usr/bin/ruby ${KATELLO_HOME}/script/rails s -p ${KATELLO_PORT} -e ${KATELLO_ENV} -d >/var/log/katello/startup.log 2>&1
        daemon --user ${KATELLO_USER} nohup bundle exec /usr/bin/ruby ${KATELLO_HOME}/script/rails s -p ${KATELLO_PORT} -e ${KATELLO_ENV} >/var/log/katello/startup.log 2>&1 &
        RETVAL=$?
        if [ $RETVAL = 0 ]; then
            echo_success
        else
            echo_failure
        fi
    fi

    echo
    return $RETVAL
}

stop() {
    check_privilege

    echo -n $"Stopping $prog: "
    if status_q; then
        killproc -p ${KATELLO_PID}
        RETVAL=$?
    else
        echo -n $"$prog was not running. "
        RETVAL=0
        echo_success
    fi

    echo
    return $RETVAL
}

restart() {
    stop
    start
}

condstop() {
    if status_q; then
        stop
    else
        RETVAL=0
    fi
}

condrestart() {
    if status_q; then
        restart
    else
        RETVAL=0
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    condrestart|try-restart)
        condrestart
        ;;
    condstop)
        condstop
        ;;
    status)
        status
        ;;
    depcheck)
        # check if required dependencies from Gemfile are installed
        TMPDIR=$(mktemp -d)
        pushd $KATELLO_HOME >/dev/null
          cp -R .bundle/ $TMPDIR
          cp Gemfile* $TMPDIR
        popd >/dev/null
        pushd $TMPDIR >/dev/null
          bundle install --without 'test development' --local
        popd >/dev/null
        rm -rf $TMPDIR
        ;;
    initdb)
        # stop if it is running
        condstop
        pushd $KATELLO_HOME >/dev/null
        su $KATELLO_USER -s /bin/bash -c "RAILS_ENV=$KATELLO_ENV rake setup --trace" \
          2>&1 | tee /var/log/katello/initdb.log
        popd >/dev/null
        touch $KATELLO_DATA_DIR/initdb_done
        ;;
    *)
        echo "Usage: {start|stop|restart|condrestart|status|initdb}"
        exit 1
        ;;
esac

exit $RETVAL
