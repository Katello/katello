#!/usr/bin/ruby
#
# This file was generated by RubyGems.
#
# The application 'thin' is installed as part of a gem, and
# this file is here to facilitate running it.
#

require 'rubygems'
require 'rubygems'
require 'rails/commands/server'
require 'rails/all'
require 'rack'
require 'yaml'

version = ">= 0"

if ARGV.first =~ /^_(.*)_$/ and Gem::Version.correct? $1 then
  version = $1
  ARGV.shift
end

# Subsystem check
# We add the check after initialization, because Rspec runs its initail rails init in development mode
# but this file is not run as part of rspec
module Src
  class Application < Rails::Application
    config.after_initialize do

      require 'resources/candlepin'
      subsystems_file = "#{Rails.root}/config/subsystems.yml"
      raise _("Unable to find config/subsystems.yml") unless File.exists? subsystems_file
      subsystems = YAML::load_file(subsystems_file) || {}

      begin
        required_version =  subsystems["candlepin"]
        raise _("No version of candlepin specified") if required_version.nil?
        cp_ping = Candlepin::CandlepinPing.ping
        actual_version = "#{cp_ping[:version]}-#{cp_ping[:release]}"
        actual_version.gsub!('%{?dist}','') #remove %{?dist}
        raise _("Incorrect version , Expected #{required_version}, got #{actual_version}") if  actual_version != required_version
      rescue Exception => e
        #print to console and the logs, extra newlines make it stand out
        2.times do
          78.times { print '*' }; puts '*'
        end
        puts Rails.logger.error _("\nWarning: #{e.message}\n\n")
        puts "To suppress this message, edit subsystems.yml config file."
        2.times do
          78.times { print '*' }; puts '*'
        end
      end
    end
  end
end


gem 'thin', version
load Gem.bin_path('thin', 'thin', version)
