//Edit/view page as seen on the 2 pane changeset history list
= javascript :changeset_edit


= content_for :title do
  = _("Details")

= content_for :content do
  .grid_10
    #changeset.fieldset{'data-ajax_url'=>changeset_path(@changeset.id)}
      .grid_2.ra
        %label #{_("Name:")}
      .grid_7.la{:name=>"name", :class=>("editable edit_textfield" if editable), "data-id"=>@changeset.id,"data-url"=>changeset_path(@changeset.id)} #{@changeset.name}

    #changeset.fieldset{'data-ajax_url'=>changeset_path(@changeset.id)}
      .grid_2.ra
        %label #{_("Description:")}
      .grid_7.la{:name=>"description", :class=>("editable edit_description" if editable), "data-id"=>@changeset.id,"data-url"=>changeset_path(@changeset.id)} #{@changeset.description}




    .fieldset
      .grid_2.ra
        %label #{_("Promotion Date:")}
      .grid_7.la
        = I18n.l(@changeset.promotion_date, :format=>:long)
    #changeset_history_tabs
      .grid_10
        %h2 #{_("Contents:")}
        -if @changeset.involved_products.empty? && @changeset.system_templates.empty?
          .grid_7.prefix_1
            #{_("This changeset contains no content.")}
        -else
          #accordion.grid_8.prefix_1.cs_history_tab
            - if !@changeset.system_templates.empty?
              %h3
                %a{:href=>'#'}= _("System Templates")
              #system_templates.cs_history_tab
                %ul
                -for template in @changeset.system_templates
                  %li
                    = template.name

            - if !@changeset.products.empty?
              %h3
                %a{:href=>'#'} #{_("Full Products")}
              #full_products.cs_history_tab
                %ul
                  -for prod in @changeset.products
                    %li #{prod.name}
            - for prod in @changeset.partial_products
              %h3
                %a{:href=>'#'} #{_(prod.name)}
              .cs_history_tab
                = render :partial=>"content_type", :locals=>{:items=>@changeset.packages.where(:product_id=>prod.id).collect{|i| i.display_name},
                                                              :type_string=>_("Packages")}
                = render :partial=>"content_type", :locals=>{:items=>@changeset.errata.where(:product_id=>prod.id).collect{|i| i.display_name},
                                                              :type_string=>_("Errata")}
                = render :partial=>"content_type", :locals=>{:items=>@changeset.repos.where(:product_id=>prod.id).collect{|i| i.display_name},
                                                              :type_string=>_("Repositories")}





