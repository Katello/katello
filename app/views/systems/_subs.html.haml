= include_javascripts :treetable, :system_subscriptions
.grid_8
  = form_tag update_subscriptions_system_path, :id=>"unsubscribe", :method=>"post", :remote=>true do
    %h5 #{_("System Current Subscription(s)")}
    .tree
      %table#unsubscribeTable
        %thead
          %tr
            %th
            %th #{_("Subscription")}
            %th #{_("SLA")}
            %th #{_("Sockets")}
            %th #{_("Guests")}
            %th #{_("Quantity")}
            %th #{_("Expires")}
        %tbody
          - if consumed_subs.length > 0
            - for sub in consumed_subs
              %tr{:id => "#{sub.poolId}"}
                %td
                %td
                  %span.fl
                    = check_box_tag "system[#{sub.poolId}]", value="#{sub.poolId}", false
                  &nbsp;
                  #{sub.poolName}
                %td #{sub.sla}
                %td #{sub.sockets}
                %td #{sub.guests}
                %td #{sub.quantity} of #{sub.consumed}
                %td #{sub.expires}
              - sub.providedProducts.each do |product|
                %tr{:class => "child-of-#{sub.poolId}"}
                  %td
                  %td{:colspan=>5}
                    = product.name
                - product.productContent.each do |product_content|
                  = render :partial=>'subscription_details', :locals=>{:group => sub.poolId, :product_content => product_content}
          - else
            %tr
              %td{:colspan=>5} #{_("The system is not currently consuming any subscriptions.")}
      - if editable && consumed_subs.length > 0
        .actions
          %a{:class=>'dialogbutton button disabled', :id=>"fake_unsub_submit"} #{_('Unsubscribe')}
          = submit_tag _('Unsubscribe'), :class => 'submit dialogbutton', :id=>"unsub_submit"
.grid_8
  = form_tag update_subscriptions_system_path, :id=>"subscribe", :method=>"post", :remote=>true do
    %h5 #{_("Available Subscriptions")}
    .tree
      %table#subscribeTable
        %thead
          %tr
            %th
            %th #{_("Subscription")}
            %th #{_("Sockets")}
            %th #{_("Guests")}
            %th #{_("Quantity")}
            %th #{_("Expires")}
        %tbody
          - if avail_subs.length > 0
            - for sub in avail_subs
              %tr{:id => "#{sub.poolId}"}
                %td
                %td
                  %span.fl
                    = check_box_tag "system[#{sub.poolId}]", false
                    -#/ put the product's id in the value field so we know what product is syncing
                    -#=check_box_tag "repo[#{r.id}]", value="#{p.id}"
                  &nbsp;
                  #{sub.poolName}
                %td #{sub.sockets}
                %td #{sub.guests}
                %td
                  - if sub.multiEntitlement
                    = number_field_tag "spinner[#{sub.poolId}]", nil, :in => 1...sub.quantity, :step=>1, :value=>0, :class=>"ui-spinner"
                  - else
                    = label_tag "label[#{sub.poolId}]", "0 of #{sub.quantity - sub.consumed}", :class => "ui-nonspinner-label"
                    = hidden_field_tag "spinner[#{sub.poolId}]", 0, :class => "ui-nonspinner"
                %td #{sub.expires}
              - sub.providedProducts.each do |product|
                %tr{:class => "child-of-#{sub.poolId}"}
                  %td
                  %td{:colspan=>5}
                    = product.name
                - product.productContent.each do |product_content|
                  = render :partial=>'subscription_details', :locals=>{:group => sub.poolId, :product_content => product_content}
          - else
            %tr
              %td{:colspan=>5} #{_("There are no more subscriptions available.")}
      - if editable && avail_subs.length > 0
        .actions
          = submit_tag _('Subscribe'), :class => 'submit dialogbutton', :id=>"sub_submit"
          %a{:class=>'dialogbutton button disabled', :id=>"fake_sub_submit"} #{_('Subscribe')}