= include_javascripts :treetable
.grid_8
  = form_tag update_subscriptions_system_path, :id=>"unsubscribe", :method=>"post", :remote=>true do
    %h5 #{_("System Current Subscription(s)")}
    .tree
      %table#unsubscribeTable
        %thead
          %tr
            %th
            %th #{_("Subscription")}
            %th #{_("SLA")}
            %th #{_("Contract")}
            %th #{_("Quantity")}
            %th #{_("Expires")}
        %tbody
          - if consumed_entitlements.length > 0
            - for entitlement in consumed_entitlements
              %tr{:id => "#{entitlement.entitlementId}"}
                %td
                %td
                  %span.fl
                    = check_box_tag "system[#{entitlement.entitlementId}]", value="#{entitlement.entitlementId}", false
                  &nbsp;
                  #{entitlement.poolName}
                %td #{entitlement.sla}
                %td #{entitlement.contractNumber}
                %td
                  = entitlement.quantity < 0 ? 1 : entitlement.quantity
                %td #{entitlement.expires}
              - entitlement.providedProducts.each do |product|
                %tr{:class => "child-of-#{entitlement.entitlementId}"}
                  %td{:colspan=>7}
                    %ul
                      %li
                        = _("Product Name: ")
                        = product.name
                      - product.productContent.each do |product_content|
                        = render :partial=>'subscription_details', :locals=>{:group => entitlement.entitlementId, :product_content => product_content}
          - else
            %tr
              %td{:colspan=>5} #{_("The system is not currently consuming any subscriptions.")}
      - if editable && consumed_entitlements.length > 0
        .actions
          %a{:class=>'dialogbutton button disabled', :id=>"fake_unsub_submit"} #{_('Unsubscribe')}
          = submit_tag _('Unsubscribe'), :class => 'submit dialogbutton', :id=>"unsub_submit"
.grid_8
  = form_tag update_subscriptions_system_path, :id=>"subscribe", :method=>"post", :remote=>true do
    %h5 #{_("Available Subscriptions")}
    .tree
      %table#subscribeTable
        %thead
          %tr
            %th
            %th #{_("Subscription")}
            %th #{_("Sockets")}
            %th #{_("Available")}
            %th #{_("Total")}
            %th #{_("Expires")}
        %tbody
          - if avail_subs.length > 0
            - for sub in avail_subs
              %tr{:id => "#{sub.poolId}"}
                %td
                %td
                  %span.fl
                    = check_box_tag "system[#{sub.poolId}]", false
                  &nbsp;
                  #{sub.poolName}
                %td #{sub.sockets}
                %td
                  - if sub.multiEntitlement
                    = number_field_tag "spinner[#{sub.poolId}]", nil, :in => 0..(sub.quantity-sub.consumed), :step=>1, :value=>0, :class=>"ui-spinner"
                    = "of #{sub.quantity - sub.consumed}"
                  - else
                    - if sub.quantity < 0
                      = _("Unlimited")
                    -else
                      %div{:class=>"ui-nonspinner-label"} 0 of #{sub.quantity - sub.consumed}
                    = hidden_field_tag "spinner[#{sub.poolId}]", 0, :class => "ui-nonspinner"
                %td
                  = sub.quantity < 0 ? '' : sub.quantity
                %td #{sub.expires}
              - sub.providedProducts.each do |product|
                %tr{:class => "child-of-#{sub.poolId}"}
                  %td{:colspan=>7}
                    %ul
                      %li
                        = _("Product Name: ")
                        = product.name
                      - product.productContent.each do |product_content|
                        = render :partial=>'subscription_details', :locals=>{:group => sub.poolId, :product_content => product_content}
          - else
            %tr
              %td{:colspan=>5} #{_("There are no more subscriptions available.")}
      - if editable && avail_subs.length > 0
        .actions
          = submit_tag _('Subscribe'), :class => 'submit dialogbutton', :id=>"sub_submit"
          %a{:class=>'dialogbutton button disabled', :id=>"fake_sub_submit"} #{_('Subscribe')}