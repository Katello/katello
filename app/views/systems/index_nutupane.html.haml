= javascript 'systems/systems.controller', 'widgets/nutupane', 'components/inline_edit.directive', 'components/input.directive'
= stylesheet 'widgets/nutupane'

%div{ 'ng-controller' => 'SystemsController' }
  %h1
    = _("Systems")
  %div{ 'alch-table-toolbar' => 'table' }
  %table#nutupane-table.table.stable.stripe-row{ 'alch-table' => 'table', 'row-select' => 'true', 'ng-class' => '{ "table-mask" : table.working }' }
      
  %div.nutupane-details{ 'nutupane-details'=>'table.visible', 'ng-class' => '{ "nutupane-details-open" : !table.visible }' }
    %header
      %h2.fl
        {{ system.name }}
      %div.fr
        %a{ 'ng-click' => 'table.visible = true' }
          = "Close"
    %section{ "style" => "clear:both;" }
      %nav{ 'alch-menu' => "systems_menu" }
      %form.form

        %h5 #{_("Basic Information")}
        %div{ 'alch-input'=>'system.id', 'label'=>_('ID') }
        %div{ 'alch-input'=>'system.uuid', 'label'=>_('UUID') }

        %h5 #{_("Networking")}
        %div{ 'alch-input'=>'system.hostname', 'label'=>_('Hostname') }
        .control-group
          .label
            = label :interfaces, :interfaces, _("Interfaces")
          .input
            %table#interface_table
              %tr{ 'ng-repeat' => 'interface in system.interfaces' }
                %td.interface_name
                  {{ interface.name }}
                %td.interface_addr
                  {{ interface.addr }}

        %h5 #{_("System Properties")}
        .control-group
          .label
            = label :system, :name, _("Name")
          .input
            %span{ 'inline-edit-text'=>'system.name' } 
        .control-group
          .label
            = label :system, :description, _("Description")
          .input
            %span{ 'inline-edit-textarea'=>'system.description' }
        .control-group
          .label
            = label :os, :os, _("OS")
          .input
            %span.value
              {{ system.distribution_name }}
        .control-group
          .label
            = label :release, :release, _("Release")
          .input
            %span.value
              {{ system.kernel }}
        -#.control-group
          .label.help
            %i
              = "?"
            = label :releaseVer, :releaseVer, _("Release Version")
            %span
              = _("Setting the release version limits content to this version only, preventing newer packages from being available for installation.")
          .input
            - if !releases_error.nil?
              %span.value{'name' => 'system[releaseVer]', 'class' => ("editable edit_select_system_releasever_message error_message" if editable), 'data-url'=>system_path(system.id), 'data-message'=>releases_error}
                = system.release == "" ? _("System Default") : system.release
            - elsif releases == []
              - if Katello.config.katello?
                - none_message = ("No alternate release version choices are available. These choices are based upon the repositories that have been enabled and promoted to this system's environment.")
              - else
                - none_message = _("No alternate release version choices are available. These choices are based upon the Red Hat manifest imported and the content available in the CDN.")
              %span.value{'name' => 'system[releaseVer]', 'class' => ("editable edit_select_system_releasever_message" if editable), 'data-url'=>system_path(system.id), 'data-message'=>none_message}
                = system.release == "" ? _("System Default") : system.release
            - else
              %span.value{'name' => 'system[releaseVer]', 'inline-edit-select'=>'system.release', 'inline-edit-select-options' => system_releasevers_edit(system, releases)}
        .control-group
          .label
            = label :arch, :arch, _("Arch")
          .input
            %span.value
              {{ system.arch }}
        .control-group
          .label
            = label :memory, :memory, _("RAM (MB)")
          .input
            %span.value
              {{ system.memory }}
        .control-group
          .label
            = label :sockets, :sockets, _("Sockets")
          .input
            %span.value
              {{ system.sockets }}
        .control-group
          .label
            = label :location, :location, _("Location")
          .input
            %span{ 'inline-edit-text'=>'system.location' }
        .control-group
          .label
            = label :arch, :arch, _("Environment")
          -#.input
            %span{ 'inline-edit-environment-selector'=>'system.environment' }
              #environment_path_selector{'name'=> 'system[environment_id]', :class=>("editable" if editable), 'data-url'=>system_path(system.id)}
              %span #{system_environment_name system}
        - if Katello.config.katello?
          .control_group
            .label
              = label :content_view, :content_view, _("Content View")
            .input
              %span{ 'inline-edit-select'=>'system.content_view_id', 
                     'inline-edit-select-options'=>'system.available_content_views' }

        %h5 #{_("System Events")}
        .control-group
          .label
            = label :checked_in, :checked_in, _("Checked In")
          .input
            %span.value
              {{ system.created_time }}
        .control-group
          .label
            = label :registered_date, :registered_date, _("Registered")
          .input
            %span.value
              {{ system.created }}
        .control-group
          .label
            = label :host_guest, :activation_key, _("Activation Key")
          .input
            %span.value
              %ul
                %li{ 'ng-repeat'=>'key in system.activation_key' }
                  {{ key.name }}
        
        %h5 #{_("Host & Guest Info")}
        .control-group
          .label
            = label :host_guest, :host_type, _("System Type")
          .input
            %span.value
              {{ system.type }}
        .control-group{ 'ng-show'=>'system.type=="Guest"' }
          .label
            = label :host_guest, :host, _("Host")
          .input
            %span.value
              {{ system.host.attributes.name }}
        .control-group{ 'ng-hide'=>'system.type=="Guest"' }
          .label
            = label :host_guest, :guest, _("Guests")
          .input
            %span.value
              %span{ 'ng-show'=>'system.guests' }
                = _("None")
              %ul
                %li{ 'ng-repeat'=>'guest in system.guests' }
                  {{ guest.attributes.name }}
