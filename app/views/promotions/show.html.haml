= javascript :panel, :env_select, :edit, :promotion, :fancyqueries, :form, :tipsy_custom
= stylesheet :fancyqueries, :tipsy


= javascript do
  :javascript
    var permissions = {
      manage_changesets: #{manage_changesets},
      promote_changesets: #{promote_changesets},
      read_changesets: #{read_changesets},
    };
    var content_breadcrumb = $.parseJSON('#{escape_javascript(generate_content_breadcrumb())}');
    var changeset_breadcrumb = $.parseJSON('#{escape_javascript(generate_cs_breadcrumb())}');
    var product_repo_filters = $.parseJSON('#{generate_product_repo_filters}');
    localize({
      "add": '+ #{escape_javascript(_('Add'))}',
      "added": '#{escape_javascript(_('Added:'))}',
      "removed": '#{escape_javascript(_('Removed:'))}',
      "remove": '#{escape_javascript(_('Remove'))}',
      "loading": "#{escape_javascript(_('Loading Promotion Changeset'))}",
      "no_products":"#{escape_javascript(_('No products exist in the promotion changeset.'))}",
      "no_errata": "#{escape_javascript(_('No errata exist in this promotion changeset.'))}",
      "no_package": "#{escape_javascript(_('No packages exist in this promotion changeset.'))}",
      "no_repo": "#{escape_javascript(_('No repositories exist in this promotion changeset.'))}",
      "no_distribution": "#{escape_javascript(_('No distributions exist in this promotion changeset.'))}",
      "no_system_templates":"#{escape_javascript(_('No system templates exist in the changeset.'))}",
      "errata": "#{escape_javascript(_("Errata"))}",
      "package": "#{escape_javascript(_("Packages"))}",
      "repo": "#{escape_javascript(_("Repositories"))}",
      "distribution": "#{escape_javascript(_('Distributions'))}",
      "system_templates": "#{escape_javascript(_('system templates'))}",
      "templates": '#{escape_javascript(_("System Templates"))}',
      "viewing": '#{escape_javascript(_('currently editing this promotion changeset'))}',
      "review": '#{escape_javascript(_("Review"))}',
      "cancel_review": '#{escape_javascript(_("Cancel Review"))}',
      "promote": "#{escape_javascript(_('Promote to ')) + (@next_environment.nil? ? '' : @next_environment.name)}",
      "promote_confirm": '#{escape_javascript(_("promote_confirm"))}',
      "package_singular": '#{escape_javascript(_("Package"))}',
      "package_plural": '#{escape_javascript(_("Packages"))}',
      "product_singular": '#{escape_javascript(_("Product"))}',
      "product_plural": '#{escape_javascript(_("Products"))}',
      "errata_singular": '#{escape_javascript(_("Erratum"))}',
      "errata_plural": '#{escape_javascript(_("Errata"))}',
      "repo_singular": '#{escape_javascript(_("Repository"))}',
      "repo_plural": '#{escape_javascript(_("Repositories"))}',
      "distribution_singular": "#{escape_javascript(_('Distribution'))}",
      "distribution_plural": "#{escape_javascript(_('Distributions'))}",
      "system_template_singular": "#{escape_javascript(_('System Template'))}",
      "system_template_plural": "#{escape_javascript(_('System Templates'))}",
      "changeset_empty": '#{escape_javascript(_("Promotion Changeset is empty."))}',
      "summary": '#{escape_javascript(_("Summary:"))}',
      "loading_deps": '#{escape_javascript(_("Loading dependencies."))}',
      "dep_of": '#{escape_javascript(_("Dependency of "))}',
      "deps": "#{escape_javascript(_("Dependencies"))}",
      "full_product": '#{escape_javascript(_("Full Products"))}',
      "partial_product": '#{escape_javascript(_("Partial Products"))}',
      "edit_details": '#{escape_javascript(_("Edit Details"))}',
      'close_details': '#{escape_javascript(_("Close Details"))}',
      "leave_page": '#{escape_javascript(_('Some promotion changeset modifications have not finished processing, are you sure you want to leave the page?  By leaving you may lose some modifications.'))}',
      "changeset_progress": '#{escape_javascript(_("This promotion changeset is currently being promoted."))}',
      "promoting": '#{escape_javascript(_("Promoting..."))}',
      "promoted": '#{escape_javascript(_("Promoted"))}',
      "promotion_failed": '#{escape_javascript(_("Promotion Failed"))}',
      "search" : "#{escape_javascript(_('Filter'))}",
      "search" : "#{escape_javascript(_('Search'))}",
      "disabled_search" : "#{escape_javascript(_('Search is not available for the current content'))}",
      "product_filter_tipsy":"#{escape_javascript(_('This product or one of the repositories belonging to it has one or more filters applied. Packages matching the filter criteria will not be promoted.'))}",
      "applicable_product_filters": "#{escape_javascript(_('Applicable Product filters:'))}",
      "applicable_repo_filters": "#{escape_javascript(_('Applicable Repository filters:'))}",
      "for_repository": function(x){ return "#{escape_javascript(_('Repository \'%X\''))}".replace("%X", x);},
      "repo_filter_tipsy":"#{escape_javascript(_('This repository or its product has one or more filters applied to it. Packages matching the filter criteria will not be promoted to the next environment for this repository.'))}"
    });

#error_dialog{:style=>"display: none"}
  = _("An error has occured when communicating with the server, please refresh the page to retrieve the current promotion changeset.")

#wait_dialog{:style=>"display: none"}
  = _("Processing promotion changeset modifications, please wait.")
  = image_tag ("spinner.gif")





//Div for dep. content 
#dialog_content{:style => "word-wrap: break-word;", :title=>"#{_('Package Dependencies')}"}

= help_tip_button
.grid_16
  = help_tip(_('Promotions allow you to promote content from one environment to the next along ' + |
                'a promotion path. Once you have created a promotion changeset, clicking "Add" next to  '+ |
                'one or more products will add them to the promotion changeset. If products already '    + |
                'exist in the next environment, you may promote other types of content. Once ' + |
                'you have created a change set, click the "Promote" button to commit it to the next environment.'))   |
.grid_16
  = environment_selector(:url_proc=>breadcrumb_url_proc,  :accessible_envs=>accessible_envs)

.grid_16
  #container.promotions
    .right_tree.sliding_tree
      #changeset_tree
        - if read_changesets
          %h2 #{@next_environment.name + _(" Promotion Changesets")}
          .breadcrumb_filter.fl.clear.clickable
            %form#filter_form.filter.clear
              %input{ :name => "filter", :type => "input", :placeholder => _("Filter..."), :id=>"filter_input"}
              %button.action #{_("Filter")}
              %br.clear
            .filter_button.fr.clickable{ :title => "#{_('Filter')}" }
              #{_('Filter')}
            .tree_breadcrumb
          .sliding_container
            #cslist.list.sliding_list{"data-page_size"=>current_user.page_size}
              #tree_loading.slider.tree_loading
                .text
                  = _("Loading Promotion Changeset")
                  = image_tag ("spinner.gif")
              .slider_one.has_content.slider.will_have_content
              .slider_two.no_content.slider
          #changeset_edit.slide_up_container
            %h2
              &nbsp; #{_("Promotion Changeset Details")}
            .fieldset
              .grid_2.ra
                %label #{_("Name:")}
              .grid_4.la.editable.edit_name_text{'name' => 'name'}
              .grid_2.ra
                %label #{_("Description:")}
              .grid_4.la.editable.edit_description{'name' => 'description'}
              
          #changeset_status
          - if manage_changesets || promote_changesets
            #sliding_tree_actionbar.clickable
              #delete_changeset.cs_action{"data-url"=>changesets_path, "data-confirm-text"=>_('Are you sure?')}
                %span#delete_changeset_icon.sprite
                  SPRITE
                %span.text
                  = _("Remove")
              #edit_changeset.cs_action
                %span#edit_changeset_icon.sprite
                  SPRITE
                %span.text
                  = _('Edit Details')
              #review_changeset.cs_action
                %span#review_changeset_icon.sprite
                  SPRITE
                %span.text
                  = _('Review')
              #promote_changeset.cs_action
                %span#promote_changeset_icon.sprite
                %span.text
                  = _('Promote')
          #changeset_users
        - elsif @next_environment
          %h2 #{_("Promotion Changesets")}
          = _("You do not have permissions to view promotion changesets for #{@next_environment.name}. Please contact your administrator to gain access.")
        - else
          %h2 #{_("Promotion Changesets")}
          = _("An environment does not exist to promote content to.  If you would like to manage promotion changesets and content, please create a new environment.")



    = render :partial=>"common/tupane"
  
    #content_tree.left.sliding_tree
      - if @next_environment
        - if manage_changesets
          %a.fr{:href => "#", :id => "new", :class => "block", "data-ajax_url" => "#{url_for(:controller=>'changesets', :action=> 'new')}?env_id=#{@next_environment.id}"}
            #{_('+ New Promotion Changeset')}
            .arrow-right
        - elsif @environment.organization.environments_manageable? 
          %a.fr{:href => "#", :id => "new", :class => "block", "data-ajax_url" => "#{url_for(:controller=>'changesets', :action=> 'new')}?env_id=#{@environment.id}"}
            #{_('+ New Promotion Changeset')}
            .arrow-right
      %h2 #{@environment.name + _(" Content")}
      .breadcrumb_search.clear.clickable
        .search_button.clickable.fr{ :disabled => "disabled", :title => "#{_('Search')}" }
          #{_('Search')}
        .search_box
          %span.search_status
            %span.current_items_count
              0
            #{_('displayed')} of
            %span.total_results_count
              0
            #{_('results.')}
          %form#search_form.search{"data-url" => search_index_path()}
            = text_field_tag(:search, params[:search], {:type => "text", :placeholder => "Search...", :class => "auto_complete_input ui-autocomplete-input"})
            %button.action{:form => "search_form", :id => "search_button"} #{_("Search")}
        .tree_breadcrumb
      .sliding_container
        #list.list.sliding_list{"data-page_size"=>current_user.page_size}
          .slider_one.has_content.slider
            = image_tag("spinner.gif")
          .slider_two.no_content.slider
            = image_tag("spinner.gif")


#conflict-dialog{:style=>"display: none"}
  %div
    = _("Your update has applied successfully, but during that time another user has also made an update.")
    %a#conflict-details #{_("More details")}
    %input#conflict_close.button.fr{:type => "button", :value=>"#{('Close')}"}
  .clear
  #conflict-accordion{:style=>"display: none"}
