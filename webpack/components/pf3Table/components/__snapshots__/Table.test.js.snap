// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Table renders Table with body 1`] = `
<div>
  <TablePfProvider
    bordered={true}
    className="table-fixed neat-table-cells"
    columns={
      Array [
        Object {
          "header": Object {
            "label": "ID",
          },
          "property": "id",
        },
        Object {
          "header": Object {
            "label": "Data",
          },
          "property": "data",
        },
      ]
    }
    components={Object {}}
    condensed={false}
    dataTable={false}
    hover={true}
    inlineEdit={false}
    striped={true}
  >
    <Header
      key="header"
    />
    <TableBody
      columns={
        Array [
          Object {
            "header": Object {
              "label": "ID",
            },
            "property": "id",
          },
          Object {
            "header": Object {
              "label": "Data",
            },
            "property": "data",
          },
        ]
      }
      key="body"
      message="some body message"
      rowKey="id"
      rows={
        Array [
          Object {
            "data": "data-1",
            "id": 1,
          },
          Object {
            "data": "data-2",
            "id": 2,
          },
        ]
      }
    />
  </TablePfProvider>
</div>
`;

exports[`Table renders Table with children 1`] = `
<div>
  <TablePfProvider
    bordered={true}
    className="table-fixed neat-table-cells"
    columns={
      Array [
        Object {
          "header": Object {
            "label": "ID",
          },
          "property": "id",
        },
        Object {
          "header": Object {
            "label": "Data",
          },
          "property": "data",
        },
      ]
    }
    components={Object {}}
    condensed={false}
    dataTable={false}
    hover={true}
    inlineEdit={false}
    striped={true}
  >
    some children
  </TablePfProvider>
</div>
`;

exports[`Table renders Table with emptyState 1`] = `
<EmptyState
  empty="state"
/>
`;

exports[`Table renders Table with pagination 1`] = `
<div>
  <TablePfProvider
    bordered={true}
    className="table-fixed neat-table-cells"
    columns={
      Array [
        Object {
          "header": Object {
            "label": "ID",
          },
          "property": "id",
        },
        Object {
          "header": Object {
            "label": "Data",
          },
          "property": "data",
        },
      ]
    }
    components={Object {}}
    condensed={false}
    dataTable={false}
    hover={true}
    inlineEdit={false}
    striped={true}
  >
    some children
  </TablePfProvider>
  <Pagination
    className={null}
    itemCount={2}
    noSidePadding={false}
    onChange={[Function]}
    onPerPageSelect={null}
    onSetPage={null}
    page={1}
    perPage={20}
    updateParamsByUrl={false}
    variant="bottom"
  />
</div>
`;
