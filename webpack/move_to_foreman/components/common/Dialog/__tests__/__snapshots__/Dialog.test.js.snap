// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dialog enables to define custom buttons 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={false}
    closeLabel="Close"
  >
    <Button
      active={false}
      aria-hidden="true"
      aria-label="Ok"
      block={false}
      bsClass="btn"
      bsStyle="default"
      className="close"
      disabled={false}
      onClick={[Function]}
    >
      <Icon
        name="close"
        type="pf"
      />
    </Button>
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      Message dialog
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <p />
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      disabled={false}
      key="btn1"
    >
      Button 1
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      disabled={false}
      key="btn2"
    >
      Button 2
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      disabled={false}
      key="btn3"
    >
      Button 3
    </Button>
  </ModalFooter>
</Modal>
`;

exports[`Dialog enables to override cancel button label 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={false}
    closeLabel="Close"
  >
    <Button
      active={false}
      aria-hidden="true"
      aria-label="Custom cancel"
      block={false}
      bsClass="btn"
      bsStyle="default"
      className="close"
      disabled={false}
      onClick={[Function]}
    >
      <Icon
        name="close"
        type="pf"
      />
    </Button>
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      Message dialog
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <p>
      Some important message
    </p>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      className="btn-cancel"
      disabled={false}
      key="cancel"
      onClick={[Function]}
    >
      Custom cancel
    </Button>
  </ModalFooter>
</Modal>
`;

exports[`Dialog enables to set inner html 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={false}
    closeLabel="Close"
  >
    <Button
      active={false}
      aria-hidden="true"
      aria-label="Ok"
      block={false}
      bsClass="btn"
      bsStyle="default"
      className="close"
      disabled={false}
      onClick={[Function]}
    >
      <Icon
        name="close"
        type="pf"
      />
    </Button>
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      Message dialog
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <p
      dangerouslySetInnerHTML={
        Object {
          "_html": "<b>Custom</b> html content",
        }
      }
    />
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      className="btn-cancel"
      disabled={false}
      key="cancel"
      onClick={[Function]}
    >
      Ok
    </Button>
  </ModalFooter>
</Modal>
`;

exports[`Dialog renders a message dialog 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={false}
    closeLabel="Close"
  >
    <Button
      active={false}
      aria-hidden="true"
      aria-label="Ok"
      block={false}
      bsClass="btn"
      bsStyle="default"
      className="close"
      disabled={false}
      onClick={[Function]}
    >
      <Icon
        name="close"
        type="pf"
      />
    </Button>
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      Message dialog
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <p>
      Some important message
    </p>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      className="btn-cancel"
      disabled={false}
      key="cancel"
      onClick={[Function]}
    >
      Ok
    </Button>
  </ModalFooter>
</Modal>
`;
