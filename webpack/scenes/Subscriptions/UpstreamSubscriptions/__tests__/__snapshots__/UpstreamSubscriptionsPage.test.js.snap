// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`upstream subscriptions page should render 1`] = `
<Grid
  bsClass="container-fluid"
  componentClass="div"
  fluid={false}
>
  <h1>
    Add Subscriptions
  </h1>
  <Spinner
    className="small-spacer"
    inline={false}
    inverse={false}
    loading={false}
    size="md"
  >
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        componentClass="div"
        sm={12}
      >
        <Table
          columns={
            Array [
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "props": Object {
                    "index": 0,
                  },
                },
                "header": Object {
                  "customFormatters": Array [
                    [Function],
                  ],
                  "label": "Select all rows",
                  "props": Object {
                    "colSpan": 1,
                    "index": 0,
                    "rowSpan": 1,
                  },
                },
                "property": "select",
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                },
                "header": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "label": "Subscription Name",
                  "props": Object {
                    "index": 1,
                  },
                },
                "property": "id",
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                },
                "header": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "label": "Contract",
                  "props": Object {
                    "index": 2,
                  },
                },
                "property": "contract_number",
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                },
                "header": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "label": "Start Date",
                  "props": Object {
                    "index": 3,
                  },
                },
                "property": "start_date",
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                },
                "header": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "label": "End Date",
                  "props": Object {
                    "index": 4,
                  },
                },
                "property": "end_date",
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                },
                "header": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "label": "Available Entitlements",
                  "props": Object {
                    "index": 5,
                  },
                },
                "property": "quantity",
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                },
                "header": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "label": "Quantity to Allocate",
                  "props": Object {
                    "index": 6,
                  },
                },
                "property": "consumed",
              },
            ]
          }
          emptyState={
            Object {
              "action": Object {
                "title": "New Subscription Allocation",
                "url": "http://redhat.com",
              },
              "description": "Subscription Allocations allow you to export subscriptions from the Red Hat Customer Portal to an on-premise subscription management application such as Red Hat Satellite.",
              "docUrl": "http://redhat.com",
              "documentation": Object {
                "title": "Learn more about Subscription Allocations",
                "url": "http://redhat.com",
              },
              "header": "There are no Subscription Allocations to display",
            }
          }
          onSelectAllRows={[Function]}
          rows={
            Array [
              Object {
                "consumed": 100,
                "contract_number": "11480900",
                "end_date": "2018-09-15T03:59:59+0000",
                "pool_id": "8a99f9815e718933015e85b19e1e11d7",
                "product_id": "RH00284",
                "product_name": "Red Hat Enterprise Linux for Power, LE, Premium (IFL, up to 4 LPARs)",
                "quantity": 200,
                "selected": false,
                "start_date": "2017-09-15T04:00:00+0000",
                "subscription_id": "4753270",
              },
              Object {
                "consumed": 100,
                "contract_number": "11480900",
                "end_date": "2018-09-15T03:59:59+0000",
                "pool_id": "8a99f9815e718933015e85b19e1e11d7",
                "product_id": "RH00284",
                "product_name": "Red Hat Enterprise Linux for Power, LE, Premium (IFL, up to 4 LPARs)",
                "quantity": 200,
                "selected": false,
                "start_date": "2017-09-15T04:00:00+0000",
                "subscription_id": "4753270",
              },
            ]
          }
        />
        <PaginationRow
          className=""
          dropdownButtonId="pagination-row-dropdown"
          itemCount={2}
          messages={
            Object {
              "currentPage": "Current Page",
              "firstPage": "First Page",
              "lastPage": "Last Page",
              "nextPage": "Next Page",
              "of": "of",
              "perPage": "per page",
              "previousPage": "Previous Page",
            }
          }
          onChange={[Function]}
          onPageSet={[Function]}
          onPerPageSelect={[Function]}
          pagination={
            Object {
              "page": 1,
              "perPage": 20,
            }
          }
          viewType="table"
        />
      </Col>
    </Row>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        componentClass="div"
        sm={12}
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="primary"
          disabled={false}
          onClick={[Function]}
          type="submit"
        >
          Submit
        </Button>
        <LinkContainer
          activeClassName="active"
          exact={false}
          replace={false}
          strict={false}
          to="/xui/subscriptions"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={false}
          >
            Cancel
          </Button>
        </LinkContainer>
      </Col>
    </Row>
  </Spinner>
</Grid>
`;
