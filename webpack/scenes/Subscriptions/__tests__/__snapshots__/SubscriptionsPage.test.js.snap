// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`subscriptions page should render 1`] = `
<Grid
  bsClass="container-fluid"
  componentClass="div"
  fluid={false}
>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      sm={12}
    >
      <h1>
        Red Hat Subscriptions
      </h1>
      <Row
        bsClass="row"
        className="toolbar-pf table-view-pf-toolbar-external"
        componentClass="div"
      >
        <Col
          bsClass="col"
          componentClass="div"
          sm={12}
        >
          <Form
            bsClass="form"
            className="toolbar-pf-actions"
            componentClass="form"
            horizontal={false}
            inline={false}
          >
            <FormGroup
              bsClass="form-group"
              className="toolbar-pf-filter"
            >
              <Search
                getAutoCompleteParams={[Function]}
                onSearch={[Function]}
              />
            </FormGroup>
            <div
              className="toolbar-pf-action-right"
            >
              <FormGroup
                bsClass="form-group"
              >
                <LinkContainer
                  activeClassName="active"
                  exact={false}
                  replace={false}
                  strict={false}
                  to="subscriptions/add"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    disabled={false}
                  >
                    Add Subscriptions
                  </Button>
                </LinkContainer>
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={false}
                  onClick={[Function]}
                >
                  Manage Manifest
                </Button>
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={false}
                >
                  Export CSV
                </Button>
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={false}
                >
                  Delete
                </Button>
              </FormGroup>
            </div>
          </Form>
        </Col>
      </Row>
      <Connect(ManageManifestModal)
        onClose={[Function]}
        showModal={false}
      />
      <Spinner
        className="small-spacer"
        inline={false}
        inverse={false}
        loading={false}
        size="md"
      >
        <Table
          columns={
            Array [
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "props": Object {
                    "index": 0,
                  },
                },
                "header": Object {
                  "customFormatters": Array [
                    [Function],
                  ],
                  "label": "Select all rows",
                  "props": Object {
                    "colSpan": 1,
                    "index": 0,
                    "rowSpan": 1,
                  },
                },
                "property": "select",
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                },
                "header": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "label": "Name",
                  "props": Object {
                    "index": 1,
                  },
                },
                "property": "id",
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                },
                "header": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "label": "SKU",
                  "props": Object {
                    "index": 2,
                  },
                },
                "property": "product_id",
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                },
                "header": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "label": "Contract",
                  "props": Object {
                    "index": 3,
                  },
                },
                "property": "contract_number",
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                },
                "header": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "label": "Start Date",
                  "props": Object {
                    "index": 4,
                  },
                },
                "property": "start_date",
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                },
                "header": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "label": "End Date",
                  "props": Object {
                    "index": 5,
                  },
                },
                "property": "end_date",
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                },
                "header": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "label": "Requires Virt-Who",
                  "props": Object {
                    "index": 6,
                  },
                },
                "property": "virt_who",
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                },
                "header": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "label": "Consumed",
                  "props": Object {
                    "index": 7,
                  },
                },
                "property": "consumed",
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                },
                "header": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "label": "Entitlements",
                  "props": Object {
                    "index": 8,
                  },
                },
                "property": "entitlements",
              },
            ]
          }
          emptyState={
            Object {
              "action": Object {
                "title": "Add Subscriptions",
                "url": "subscriptions/add",
              },
              "description": "Add Subscriptions to this Allocation to manage your Entitlements.",
              "documentation": Object {
                "title": "Learn more about adding Subscriptions to Allocations",
                "url": "http://redhat.com",
              },
              "header": "There are no Subscriptions to display",
            }
          }
          rows={
            Array [
              Object {
                "account_number": null,
                "available": -2,
                "consumed": 1,
                "contract_number": null,
                "cores": null,
                "cp_id": "ff8080815ea5ea44015ea617b1a5000b",
                "end_date": "2047-09-14 15:18:44 -0500",
                "id": 3,
                "instance_multiplier": 1,
                "multi_entitlement": null,
                "name": "zoo",
                "product_id": "853987721546",
                "product_name": "zoo",
                "quantity": -1,
                "ram": null,
                "sockets": null,
                "stacking_id": null,
                "start_date": "2017-09-21 16:18:44 -0400",
                "subscription_id": 2,
                "support_level": null,
                "type": "NORMAL",
                "unmapped_guest": false,
                "virt_only": false,
                "virt_who": false,
              },
              Object {
                "account_number": null,
                "available": -1,
                "consumed": 0,
                "contract_number": null,
                "cores": null,
                "cp_id": "ff8080815ea5ea44015ebb08e95a0024",
                "end_date": "2047-09-18 16:54:36 -0500",
                "id": 4,
                "instance_multiplier": 1,
                "multi_entitlement": null,
                "name": "hsdfhsdh",
                "product_id": "947637693017",
                "product_name": "hsdfhsdh",
                "quantity": -1,
                "ram": null,
                "sockets": null,
                "stacking_id": null,
                "start_date": "2017-09-25 17:54:36 -0400",
                "subscription_id": 3,
                "support_level": null,
                "type": "NORMAL",
                "unmapped_guest": false,
                "virt_only": false,
                "virt_who": false,
              },
            ]
          }
        />
        <PaginationRow
          className=""
          dropdownButtonId="pagination-row-dropdown"
          itemCount={81}
          messages={
            Object {
              "currentPage": "Current Page",
              "firstPage": "First Page",
              "lastPage": "Last Page",
              "nextPage": "Next Page",
              "of": "of",
              "perPage": "per page",
              "previousPage": "Previous Page",
            }
          }
          onChange={[Function]}
          onPageSet={[Function]}
          onPerPageSelect={[Function]}
          pagination={
            Object {
              "page": 1,
              "perPage": 2,
            }
          }
          viewType="table"
        />
      </Spinner>
    </Col>
  </Row>
</Grid>
`;
