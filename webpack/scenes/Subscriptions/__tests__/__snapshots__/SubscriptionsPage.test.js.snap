// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`subscriptions page should render 1`] = `
<Grid
  bsClass="container-fluid"
  componentClass="div"
  fluid={false}
>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      sm={12}
    >
      <h1>
        Red Hat Subscriptions
      </h1>
      <Row
        bsClass="row"
        className="toolbar-pf table-view-pf-toolbar-external"
        componentClass="div"
      >
        <Col
          bsClass="col"
          componentClass="div"
          sm={12}
        >
          <Form
            bsClass="form"
            className="toolbar-pf-actions"
            componentClass="form"
            horizontal={false}
            inline={false}
          >
            <FormGroup
              bsClass="form-group"
              className="toolbar-pf-filter"
            >
              <Search
                getAutoCompleteParams={[Function]}
                onSearch={[Function]}
                updateSearchQuery={[Function]}
              />
            </FormGroup>
            <div
              className="toolbar-pf-action-right"
            >
              <FormGroup
                bsClass="form-group"
              >
                <LinkContainer
                  activeClassName="active"
                  disabled={false}
                  exact={false}
                  replace={false}
                  strict={false}
                  to="subscriptions/add"
                >
                  <TooltipButton
                    bsStyle="primary"
                    title="Add Subscriptions"
                    tooltipId="add-subscriptions-button-tooltip"
                    tooltipPlacement="top"
                    tooltipText={null}
                  />
                </LinkContainer>
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={false}
                  onClick={[Function]}
                >
                  Manage Manifest
                </Button>
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={false}
                  onClick={[Function]}
                >
                  Export CSV
                </Button>
                <TooltipButton
                  bsStyle="danger"
                  disabled={true}
                  onClick={[Function]}
                  title="Delete"
                  tooltipId="delete-subscriptions-button-tooltip"
                  tooltipPlacement="top"
                  tooltipText="This is disabled because no subscriptions are selected."
                />
              </FormGroup>
            </div>
          </Form>
        </Col>
      </Row>
      <Connect(ManageManifestModal)
        disabledReason={null}
        onClose={[Function]}
        showModal={false}
        taskInProgress={false}
      />
      <div
        className="modal-container"
        id="subscriptions-table"
      >
        <SubscriptionsTable
          emptyState={
            Object {
              "action": Object {
                "onClick": [Function],
                "title": "Import a Manifest",
              },
              "description": "Import a Manifest to manage your Entitlements.",
              "header": "There are no Subscriptions to display",
            }
          }
          loadSubscriptions={[Function]}
          onDeleteSubscriptions={[Function]}
          onSubscriptionDeleteModalClose={[Function]}
          subscriptionDeleteModalOpen={false}
          subscriptions={
            Object {
              "availableQuantities": Object {},
              "itemCount": 81,
              "loading": false,
              "pagination": Object {
                "page": 1,
                "perPage": 2,
              },
              "quantitiesLoading": false,
              "results": Array [
                Object {
                  "account_number": null,
                  "available": -2,
                  "consumed": 1,
                  "contract_number": null,
                  "cores": null,
                  "cp_id": "ff8080815ea5ea44015ea617b1a5000b",
                  "end_date": "2047-09-14 15:18:44 -0500",
                  "id": 3,
                  "instance_multiplier": 1,
                  "multi_entitlement": null,
                  "name": "zoo",
                  "product_id": "853987721546",
                  "product_name": "zoo",
                  "quantity": -1,
                  "ram": null,
                  "sockets": null,
                  "stacking_id": null,
                  "start_date": "2017-09-21 16:18:44 -0400",
                  "subscription_id": 2,
                  "support_level": null,
                  "type": "NORMAL",
                  "unmapped_guest": false,
                  "virt_only": false,
                  "virt_who": false,
                },
                Object {
                  "account_number": null,
                  "available": -1,
                  "consumed": 0,
                  "contract_number": null,
                  "cores": null,
                  "cp_id": "ff8080815ea5ea44015ebb08e95a0024",
                  "end_date": "2047-09-18 16:54:36 -0500",
                  "id": 4,
                  "instance_multiplier": 1,
                  "multi_entitlement": null,
                  "name": "hsdfhsdh",
                  "product_id": "947637693017",
                  "product_name": "hsdfhsdh",
                  "quantity": -1,
                  "ram": null,
                  "sockets": null,
                  "stacking_id": null,
                  "start_date": "2017-09-25 17:54:36 -0400",
                  "subscription_id": 3,
                  "support_level": null,
                  "type": "NORMAL",
                  "unmapped_guest": false,
                  "virt_only": false,
                  "virt_who": false,
                },
              ],
              "search": undefined,
              "searchIsActive": false,
              "tasks": Array [],
            }
          }
          task={null}
          toggleDeleteButton={[Function]}
          updateQuantity={[Function]}
        />
        <ModalProgressBar
          container={null}
          show={false}
          task={null}
        />
      </div>
    </Col>
  </Row>
</Grid>
`;
